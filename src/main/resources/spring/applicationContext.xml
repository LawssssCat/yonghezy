<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

<!-- 数据库配置 -->
<context:property-placeholder location="classpath:c3p0.properties"/>

<!-- 配置druid 连接池，id 是固定值 ，class 是 druid 连接池类的全路径 -->
<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
	<!-- 配置连接数据库的基本信息 -->
	<property name="driverClassName" value="${c3p0.driverClass}"/>
	<property name="url" value="${c3p0.jdbcUrl}"/>
	<property name="username" value="${c3p0.user}"/>
	<property name="password" value="${c3p0.password}"/>
	
	<!-- c3p0.acquireIncrement=5 如果池中数据连接不够时一次增长多少个 -->
	<property name="initialSize" value="${c3p0.initialPoolSize}"></property>
	<property name="minIdle" value="${c3p0.minPoolSize}"></property>
	<property name="maxActive" value="${c3p0.maxPoolSize}"></property>
	
	<!-- 
		c3p0.maxStatements=20 JDBC的标准参数，用以控制数据源内加载d的PreparedStatements数量
		c3p0.maxStatementsPerConnection=5  定义了连接池内单个连接所拥有的最大缓存statements数
		-->
</bean>

<!-- 3. 整合 spring 和 mybatis 框架
	将 sqlSession 等对象的创建交给 spring容器
	id值(sqlSessionFactory)是固定值
 -->
 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
 	<!-- 3.1 指定 mybatis 核心配置文件的位置 -->
 	<property name="configLocation" value="classpath:mybatis/mybatis-config.xml" />
 	<!-- 3.2 帕子连接池(数据源) -->
 	<property name="dataSource" ref="dataSource"></property>
 	<!-- 3.3 扫描所有的 XxxMapper.xml 映射文件，读取其中的配置的 SQL 语句 -->
 	<property name="mapperLocations" value="classpath:mybatis/mapper/*.xml" />
 </bean>
 
 <!-- 定义 mapper 接口扫描器 -->
 <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
 	<!-- 扫描所有 XxxMapper 接口，将接口子类及子类实例的创建交给 spring 容器-->
 	<property name="basePackage" value="com.edut.dao" />
 </bean>
 
</beans>
